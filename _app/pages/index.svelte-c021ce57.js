import{S as e,i as r,s as a,e as o,k as c,t as s,K as t,c as n,a as i,d as h,n as d,g as u,D as l,b as p,E as f,f as v,L as m,F as w,M as k}from"../chunks/vendor-c5798aa2.js";function E(e){let r,a,E,b,S,g,y,B,D,j,W,I,T,C,M,R,H,V,P,q,x,F,N,O,U,K,L,Q,z,A,G;return{c(){r=o("script"),E=o("script"),S=c(),g=o("div"),y=o("h1"),B=s("Breathe into the mic"),D=c(),j=o("button"),W=s("start"),I=c(),T=o("button"),C=s("stop"),M=c(),R=o("h2"),H=s("microphone"),V=c(),P=o("div"),q=c(),x=o("h2"),F=s("raw audio"),N=c(),O=o("div"),U=c(),K=o("h2"),L=s("filtered"),Q=c(),z=o("div"),this.h()},l(e){const a=t('[data-svelte="svelte-edyl6s"]',document.head);r=n(a,"SCRIPT",{src:!0}),i(r).forEach(h),E=n(a,"SCRIPT",{src:!0}),i(E).forEach(h),a.forEach(h),S=d(e),g=n(e,"DIV",{class:!0});var o=i(g);y=n(o,"H1",{});var c=i(y);B=u(c,"Breathe into the mic"),c.forEach(h),D=d(o),j=n(o,"BUTTON",{});var s=i(j);W=u(s,"start"),s.forEach(h),I=d(o),T=n(o,"BUTTON",{});var l=i(T);C=u(l,"stop"),l.forEach(h),M=d(o),R=n(o,"H2",{});var p=i(R);H=u(p,"microphone"),p.forEach(h),V=d(o),P=n(o,"DIV",{id:!0}),i(P).forEach(h),q=d(o),x=n(o,"H2",{});var f=i(x);F=u(f,"raw audio"),f.forEach(h),N=d(o),O=n(o,"DIV",{id:!0}),i(O).forEach(h),U=d(o),K=n(o,"H2",{});var v=i(K);L=u(v,"filtered"),v.forEach(h),Q=d(o),z=n(o,"DIV",{id:!0}),i(z).forEach(h),o.forEach(h),this.h()},h(){document.title="Puffer",l(r.src,a="https://unpkg.com/wavesurfer.js")||p(r,"src","https://unpkg.com/wavesurfer.js"),l(E.src,b="https://unpkg.com/wavesurfer.js@5.2.0/dist/plugin/wavesurfer.microphone.min.js")||p(E,"src","https://unpkg.com/wavesurfer.js@5.2.0/dist/plugin/wavesurfer.microphone.min.js"),p(P,"id","mic"),p(O,"id","raw"),p(z,"id","filtered"),p(g,"class","content")},m(a,o){f(document.head,r),f(document.head,E),v(a,S,o),v(a,g,o),f(g,y),f(y,B),f(g,D),f(g,j),f(j,W),f(g,I),f(g,T),f(T,C),f(g,M),f(g,R),f(R,H),f(g,V),f(g,P),f(g,q),f(g,x),f(x,F),f(g,N),f(g,O),f(g,U),f(g,K),f(K,L),f(g,Q),f(g,z),A||(G=[m(j,"click",e[1]),m(T,"click",e[0])],A=!0)},p:w,i:w,o:w,d(e){h(r),h(E),e&&h(S),e&&h(g),A=!1,k(G)}}}const b=!1,S=!0,g=!0;function y(e){let r,a,o,c=[];return[()=>{a.microphone.stop(),c.forEach((e=>{e.stop()})),c=[]},()=>{a&&(a.microphone.destroy(),a.destroy(),r.destroy(),o.destroy()),a=WaveSurfer.create({container:"#mic",waveColor:"black",interact:!1,cursorWidth:0,plugins:[WaveSurfer.microphone.create()]}),a.microphone.on("deviceReady",(function(e){console.log("Device ready!",e),r.process(e),o.process(e)})),a.microphone.on("deviceError",(function(e){console.warn("Device error: "+e)})),a.microphone.start(),r=WaveSurfer.create({container:"#raw",waveColor:"black",interact:!1,cursorWidth:0}),r.chunks=[],r.process=e=>{const a=new MediaRecorder(e);a.start(250),a.ondataavailable=e=>{r.chunks.push(e.data),r.loadBlob(new Blob(r.chunks))},c.push(a)},o=WaveSurfer.create({container:"#filtered",waveColor:"black",interact:!1,cursorWidth:0}),o.chunks=[],o.process=e=>{const r=a.backend.ac,s=r.createMediaStreamSource(e),t=r.createMediaStreamDestination(),n=r.createBiquadFilter();n.type="lowpass",n.frequency.value=500,n.Q.value=500/4500,s.connect(n),n.connect(t);const i=new MediaRecorder(t.stream);i.start(250),i.ondataavailable=e=>{o.chunks.push(e.data),o.loadBlob(new Blob(o.chunks))},c.push(i)}}]}class B extends e{constructor(e){super(),r(this,e,y,E,a,{})}}export{B as default,b as hydrate,g as prerender,S as router};
